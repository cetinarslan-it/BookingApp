// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingAPI.Migrations
{
    [DbContext(typeof(FlightBookingDbContext))]
    partial class FlightBookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookingAPI.Model.Flight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<string>("Arrival")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("BookingAPI.Model.Itinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("BookingAPI.Model.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdultPrice")
                        .HasColumnType("int");

                    b.Property<int>("ChildPrice")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItineraryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItineraryId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("BookingAPI.Model.Itinerary", b =>
                {
                    b.HasOne("BookingAPI.Model.Flight", null)
                        .WithMany("Itineraries")
                        .HasForeignKey("FlightId");
                });

            modelBuilder.Entity("BookingAPI.Model.Price", b =>
                {
                    b.HasOne("BookingAPI.Model.Itinerary", null)
                        .WithMany("Prices")
                        .HasForeignKey("ItineraryId");
                });

            modelBuilder.Entity("BookingAPI.Model.Flight", b =>
                {
                    b.Navigation("Itineraries");
                });

            modelBuilder.Entity("BookingAPI.Model.Itinerary", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
